# Ejecuta "pre-commit install" para instalar los hooks.

repos:
  # Enforce Conventional Commits in commit messages
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v4.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict, --force-scope, feat, fix, chore, test, refactor]

  # Ruff (linter y formateador rápido)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: "v0.11.1"
    hooks:
      - id: ruff
        args: [--fix, --preview]
      - id: ruff-format

  # Pre-commit hooks generales
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files     # Evita agregar archivos grandes (>500KB)
      - id: check-docstring-first       # Verifica que la docstring esté al inicio de un módulo
      - id: check-json                  # Verifica la sintaxis JSON
      - id: check-merge-conflict        # Verifica que no haya conflictos de merge sin resolver
      - id: check-toml                  # Verifica la sintaxis TOML
      - id: check-xml                   # Verifica la sintaxis XML
      - id: check-yaml                  # Verifica la sintaxis YAML
      - id: end-of-file-fixer           # Asegura que los archivos terminan con una línea nueva
      - id: name-tests-test             # Verifica que los archivos de test sigan el formato correcto
        args:
          - --pytest-test-first
        exclude: 'tests/(factories/.+\.py|.*utils\.py)$'
      #- id: no-commit-to-branch         # Evita commits en ramas protegidas como main/master
      - id: requirements-txt-fixer      # Ordena y limpia requirements.txt
      - id: trailing-whitespace         # Elimina espacios en blanco innecesarios
      - id: pretty-format-json          # Formatea archivos JSON automáticamente
        args:
          - --autofix
          - --indent=4
          - --no-sort-keys
